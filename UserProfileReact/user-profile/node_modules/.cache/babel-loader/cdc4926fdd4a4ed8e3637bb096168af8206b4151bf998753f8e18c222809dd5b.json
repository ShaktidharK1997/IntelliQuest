{"ast":null,"code":"var _jsxFileName = \"/Users/chhatrapathisivaji/Downloads/Software Engineering/test_project/UserProfileReact/user-profile/src/components/PersonalInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PersonalInfo.css'; // Ensure you have created this CSS file.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PersonalInfo() {\n  _s();\n  // State for the username to simulate fetching data for the logged-in user\n  const [username] = useState('temp_user');\n\n  // State to handle the profile picture preview\n  const [profilePic, setProfilePic] = useState('');\n\n  // State to GET/POST data from backend\n  const [data, setProfileData] = useState({\n    profile_picture: '',\n    first_name: '',\n    last_name: '',\n    date_of_birth: '',\n    // Assuming 'YYYY-MM-DD' format\n    email: '',\n    contact: '',\n    location: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      if (username) {\n        try {\n          const response = await fetch(`http://localhost:8000/api/personalinfo/${username}/`);\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const jsonData = await response.json();\n\n          // Assuming jsonData is an object with user details\n          setProfileData(jsonData);\n\n          // Set profilePic state if profile_picture URL is provided\n          if (jsonData.profile_picture) {\n            setProfilePic(jsonData.profile_picture);\n          }\n        } catch (error) {\n          console.error(\"An error occurred while fetching the profile data:\", error);\n        }\n      }\n    };\n    fetchData();\n  }, [username]);\n  const handleProfilePicChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setProfilePic(URL.createObjectURL(file));\n    }\n  };\n  const handleProfilePicUpload = async () => {\n    const formData = new FormData();\n    const fileField = document.querySelector('input[type=\"file\"]');\n    if (fileField && fileField.files[0]) {\n      formData.append('file', fileField.files[0]);\n      try {\n        const response = await fetch(`http://localhost:8000/api/upload_profile_picture/${username}/`, {\n          method: 'PUT',\n          body: formData\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        console.log(\"Profile picture uploaded successfully.\");\n      } catch (error) {\n        console.error(\"Error uploading profile picture:\", error);\n      }\n    }\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault(); // Prevent the default form submission\n\n    const updatedData = {\n      ...data\n    };\n    if (profilePic && typeof profilePic === 'string') {\n      updatedData.profile_picture = profilePic;\n    }\n\n    // For demonstration, converting to JSON to send as application/json\n    // Adjust based on your actual backend expectations\n    try {\n      const response = await fetch(`http://localhost:8000/api/personalinfo/${username}/`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      console.log(\"Profile updated successfully.\");\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"personal-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Personal Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(PersonalInfo, \"UV1cwSM8ZW1a5JBKbkUsL00qxhI=\");\n_c = PersonalInfo;\nexport default PersonalInfo;\nvar _c;\n$RefreshReg$(_c, \"PersonalInfo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PersonalInfo","_s","username","profilePic","setProfilePic","data","setProfileData","profile_picture","first_name","last_name","date_of_birth","email","contact","location","fetchData","response","fetch","ok","Error","status","jsonData","json","error","console","handleProfilePicChange","event","file","target","files","URL","createObjectURL","handleProfilePicUpload","formData","FormData","fileField","document","querySelector","append","method","body","log","handleFormSubmit","e","preventDefault","updatedData","headers","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/chhatrapathisivaji/Downloads/Software Engineering/test_project/UserProfileReact/user-profile/src/components/PersonalInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PersonalInfo.css'; // Ensure you have created this CSS file.\n\nfunction PersonalInfo() {\n  // State for the username to simulate fetching data for the logged-in user\n  const [username] = useState('temp_user');\n  \n  // State to handle the profile picture preview\n  const [profilePic, setProfilePic] = useState('');\n  \n  // State to GET/POST data from backend\n  const [data, setProfileData] = useState({\n    profile_picture: '',\n    first_name: '',\n    last_name: '',\n    date_of_birth: '', // Assuming 'YYYY-MM-DD' format\n    email: '',\n    contact: '',\n    location: ''\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (username) {\n        try {\n          const response = await fetch(`http://localhost:8000/api/personalinfo/${username}/`);\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const jsonData = await response.json();\n          \n          // Assuming jsonData is an object with user details\n          setProfileData(jsonData);\n          \n          // Set profilePic state if profile_picture URL is provided\n          if (jsonData.profile_picture) {\n            setProfilePic(jsonData.profile_picture);\n          }\n        } catch (error) {\n          console.error(\"An error occurred while fetching the profile data:\", error);\n        }\n      }\n    };\n\n    fetchData();\n  }, [username]);\n\n  const handleProfilePicChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setProfilePic(URL.createObjectURL(file));\n    }\n  };\n\n  const handleProfilePicUpload = async () => {\n    const formData = new FormData();\n    const fileField = document.querySelector('input[type=\"file\"]');\n    \n    if (fileField && fileField.files[0]) {\n      formData.append('file', fileField.files[0]);\n    \n      try {\n        const response = await fetch(`http://localhost:8000/api/upload_profile_picture/${username}/`, {\n          method: 'PUT',\n          body: formData,\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        console.log(\"Profile picture uploaded successfully.\");\n      } catch (error) {\n        console.error(\"Error uploading profile picture:\", error);\n      }\n    }\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault(); // Prevent the default form submission\n\n    const updatedData = { ...data };\n    if (profilePic && typeof profilePic === 'string') {\n      updatedData.profile_picture = profilePic;\n    }\n\n    // For demonstration, converting to JSON to send as application/json\n    // Adjust based on your actual backend expectations\n    try {\n      const response = await fetch(`http://localhost:8000/api/personalinfo/${username}/`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedData),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      console.log(\"Profile updated successfully.\");\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n    }\n  };\n\n  return (\n    <div className=\"personal-info\">\n      <h1>Personal Information</h1>\n      <form onSubmit={handleFormSubmit}>\n        {/* Form fields remain unchanged */}\n      </form>\n    </div>\n  );\n}\n\nexport default PersonalInfo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,WAAW,CAAC;;EAExC;EACA,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACS,IAAI,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC;IACtCW,eAAe,EAAE,EAAE;IACnBC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,EAAE;IACbC,aAAa,EAAE,EAAE;IAAE;IACnBC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACd,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIZ,QAAQ,EAAE;QACZ,IAAI;UACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAE,0CAAyCd,QAAS,GAAE,CAAC;UACnF,IAAI,CAACa,QAAQ,CAACE,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;UAC3D;UACA,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;;UAEtC;UACAf,cAAc,CAACc,QAAQ,CAAC;;UAExB;UACA,IAAIA,QAAQ,CAACb,eAAe,EAAE;YAC5BH,aAAa,CAACgB,QAAQ,CAACb,eAAe,CAAC;UACzC;QACF,CAAC,CAAC,OAAOe,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,oDAAoD,EAAEA,KAAK,CAAC;QAC5E;MACF;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;EAEd,MAAMsB,sBAAsB,GAAIC,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACRtB,aAAa,CAACyB,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC;IAC1C;EACF,CAAC;EAED,MAAMK,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/B,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAC;IAE9D,IAAIF,SAAS,IAAIA,SAAS,CAACN,KAAK,CAAC,CAAC,CAAC,EAAE;MACnCI,QAAQ,CAACK,MAAM,CAAC,MAAM,EAAEH,SAAS,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC;MAE3C,IAAI;QACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,oDAAmDd,QAAS,GAAE,EAAE;UAC5FoC,MAAM,EAAE,KAAK;UACbC,IAAI,EAAEP;QACR,CAAC,CAAC;QAEF,IAAI,CAACjB,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;QAC3D;QACAI,OAAO,CAACiB,GAAG,CAAC,wCAAwC,CAAC;MACvD,CAAC,CAAC,OAAOlB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF;EACF,CAAC;EAED,MAAMmB,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAEpB,MAAMC,WAAW,GAAG;MAAE,GAAGvC;IAAK,CAAC;IAC/B,IAAIF,UAAU,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;MAChDyC,WAAW,CAACrC,eAAe,GAAGJ,UAAU;IAC1C;;IAEA;IACA;IACA,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAE,0CAAyCd,QAAS,GAAE,EAAE;QAClFoC,MAAM,EAAE,OAAO;QACfO,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDN,IAAI,EAAEO,IAAI,CAACC,SAAS,CAACH,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAAC7B,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;MAC3D;MACAI,OAAO,CAACiB,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKiD,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BlD,OAAA;MAAAkD,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BtD,OAAA;MAAMuD,QAAQ,EAAEb;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACpD,EAAA,CA9GQD,YAAY;AAAAuD,EAAA,GAAZvD,YAAY;AAgHrB,eAAeA,YAAY;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}